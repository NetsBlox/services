.. code-block:: js
    :linenos:

    // service description
    // api docs = https://jsonplaceholder.typicode.com/
    const ApiConsumer = require('../utils/api-consumer');
    const {SomeApiKey} = require('../utils/api-key');

    // provide the service name and api's base url to the constructor
    SampleConsumer = new ApiConsumer('test', 'https://jsonplaceholder.typicode.com');
    ApiConsumer.setRequiredApiKey(SampleConsumer, SomeApiKey);

    /**
    * returns all available posts up to a limit
    * @param {Number} limit limit on how many posts to return
    * @returns {Object} list of posts
    */
    SampleConsumer.getPosts = function(limit) {
        const queryOpts = {
            queryString: '/posts',
            headers: {
                'auth-header': API_KEY
            }
        };

        const respParser = function(response) {
            // validate the response from the server
            if (!Array.isArray(response)) throw new Error('response is not an array');
            let posts = response
                    // filter some of the results
                    .filter(post => {
                        if (!post.title.toLowerCase().includes('word')) return true
                    })
                    // limit the response size
                    .slice(0,limit)
                    // mutate the results to keep what you need and also simplify the structure
                    .map(post => {
                        delete post.id;
                        delete post.userId;
                        return post;
                    })
            return posts;
        }

        return this._sendStruct(queryOpts, respParser);
    };

    module.exports = SampleConsumer;
    